{"ast":null,"code":"import { api } from './authService';\nclass DocumentService {\n  // Obtenir la liste des documents\n  async getDocuments() {\n    try {\n      const response = await api.get('/documents/');\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  }\n\n  // Obtenir un document spécifique\n  async getDocument(id) {\n    try {\n      const response = await api.get(`/documents/${id}/`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  }\n\n  // Uploader un nouveau document\n  async uploadDocument(formData) {\n    try {\n      const response = await api.post('/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  }\n\n  // Modifier un document\n  async updateDocument(id, data) {\n    try {\n      console.log('Mise à jour du document:', id, data);\n      const response = await api.patch(`/documents/${id}/`, data);\n      console.log('Réponse de mise à jour:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      console.error('Erreur lors de la modification:', error);\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  }\n\n  // Supprimer un document\n  async deleteDocument(id) {\n    try {\n      console.log('Suppression du document:', id);\n      const response = await api.delete(`/documents/${id}/`);\n      console.log('Document supprimé avec succès');\n      return response.data || true;\n    } catch (error) {\n      var _error$response5;\n      console.error('Erreur lors de la suppression:', error);\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  }\n\n  // Télécharger un document\n  async downloadDocument(id, filename) {\n    try {\n      const response = await api.get(`/documents/${id}/download/`, {\n        responseType: 'blob'\n      });\n\n      // Obtenir le type MIME depuis les headers de la réponse\n      const contentType = response.headers['content-type'] || 'application/octet-stream';\n\n      // Créer un blob avec le bon type MIME\n      const blob = new Blob([response.data], {\n        type: contentType\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Créer et déclencher le téléchargement\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename || `document_${id}`;\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n\n      // Nettoyer\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      return true;\n    } catch (error) {\n      console.error('Erreur lors du téléchargement:', error);\n      throw error;\n    }\n  }\n\n  // Formater la taille du fichier\n  formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  // Obtenir l'icône selon le type de fichier\n  getFileIcon(extension) {\n    const iconMap = {\n      '.pdf': 'fas fa-file-pdf text-danger',\n      '.doc': 'fas fa-file-word text-primary',\n      '.docx': 'fas fa-file-word text-primary',\n      '.txt': 'fas fa-file-alt text-secondary',\n      '.jpg': 'fas fa-file-image text-success',\n      '.jpeg': 'fas fa-file-image text-success',\n      '.png': 'fas fa-file-image text-success',\n      '.gif': 'fas fa-file-image text-success',\n      '.zip': 'fas fa-file-archive text-warning',\n      '.rar': 'fas fa-file-archive text-warning'\n    };\n    return iconMap[extension === null || extension === void 0 ? void 0 : extension.toLowerCase()] || 'fas fa-file text-muted';\n  }\n}\nexport default new DocumentService();","map":{"version":3,"names":["api","DocumentService","getDocuments","response","get","data","error","_error$response","message","getDocument","id","_error$response2","uploadDocument","formData","post","headers","_error$response3","updateDocument","console","log","patch","_error$response4","deleteDocument","delete","_error$response5","downloadDocument","filename","responseType","contentType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","style","display","body","appendChild","click","removeChild","revokeObjectURL","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","getFileIcon","extension","iconMap","toLowerCase"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/services/documentService.js"],"sourcesContent":["import { api } from './authService';\n\nclass DocumentService {\n  // Obtenir la liste des documents\n  async getDocuments() {\n    try {\n      const response = await api.get('/documents/');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Obtenir un document spécifique\n  async getDocument(id) {\n    try {\n      const response = await api.get(`/documents/${id}/`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Uploader un nouveau document\n  async uploadDocument(formData) {\n    try {\n      const response = await api.post('/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Modifier un document\n  async updateDocument(id, data) {\n    try {\n      console.log('Mise à jour du document:', id, data);\n      const response = await api.patch(`/documents/${id}/`, data);\n      console.log('Réponse de mise à jour:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la modification:', error);\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Supprimer un document\n  async deleteDocument(id) {\n    try {\n      console.log('Suppression du document:', id);\n      const response = await api.delete(`/documents/${id}/`);\n      console.log('Document supprimé avec succès');\n      return response.data || true;\n    } catch (error) {\n      console.error('Erreur lors de la suppression:', error);\n      throw error.response?.data || error.message;\n    }\n  }\n\n\n\n  // Télécharger un document\n  async downloadDocument(id, filename) {\n    try {\n      const response = await api.get(`/documents/${id}/download/`, {\n        responseType: 'blob',\n      });\n\n      // Obtenir le type MIME depuis les headers de la réponse\n      const contentType = response.headers['content-type'] || 'application/octet-stream';\n\n      // Créer un blob avec le bon type MIME\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n\n      // Créer et déclencher le téléchargement\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename || `document_${id}`;\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n\n      // Nettoyer\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n\n      return true;\n    } catch (error) {\n      console.error('Erreur lors du téléchargement:', error);\n      throw error;\n    }\n  }\n\n  // Formater la taille du fichier\n  formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  // Obtenir l'icône selon le type de fichier\n  getFileIcon(extension) {\n    const iconMap = {\n      '.pdf': 'fas fa-file-pdf text-danger',\n      '.doc': 'fas fa-file-word text-primary',\n      '.docx': 'fas fa-file-word text-primary',\n      '.txt': 'fas fa-file-alt text-secondary',\n      '.jpg': 'fas fa-file-image text-success',\n      '.jpeg': 'fas fa-file-image text-success',\n      '.png': 'fas fa-file-image text-success',\n      '.gif': 'fas fa-file-image text-success',\n      '.zip': 'fas fa-file-archive text-warning',\n      '.rar': 'fas fa-file-archive text-warning',\n    };\n    \n    return iconMap[extension?.toLowerCase()] || 'fas fa-file text-muted';\n  }\n}\n\nexport default new DocumentService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}