{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nconst usePagination = (data, initialItemsPerPage = 6) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\n  const paginatedData = useMemo(() => {\n    // S'assurer que data est un tableau\n    const safeData = Array.isArray(data) ? data : [];\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return safeData.slice(startIndex, endIndex);\n  }, [data, currentPage, itemsPerPage]);\n  const totalPages = Math.ceil((Array.isArray(data) ? data.length : 0) / itemsPerPage);\n  const goToPage = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n  const changeItemsPerPage = newItemsPerPage => {\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1); // Reset to first page when changing items per page\n  };\n  const goToFirstPage = () => setCurrentPage(1);\n  const goToLastPage = () => setCurrentPage(totalPages);\n  const goToNextPage = () => goToPage(currentPage + 1);\n  const goToPreviousPage = () => goToPage(currentPage - 1);\n  return {\n    currentPage,\n    totalPages,\n    itemsPerPage,\n    paginatedData,\n    totalItems: data.length,\n    goToPage,\n    changeItemsPerPage,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    hasNextPage: currentPage < totalPages,\n    hasPreviousPage: currentPage > 1\n  };\n};\n_s(usePagination, \"aQILCkYo2ZKMVJC6MSIS+n4AVbI=\");\nexport default usePagination;","map":{"version":3,"names":["useState","useMemo","usePagination","data","initialItemsPerPage","_s","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","paginatedData","safeData","Array","isArray","startIndex","endIndex","slice","totalPages","Math","ceil","length","goToPage","page","changeItemsPerPage","newItemsPerPage","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","totalItems","hasNextPage","hasPreviousPage"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/hooks/usePagination.js"],"sourcesContent":["import { useState, useMemo } from 'react';\n\nconst usePagination = (data, initialItemsPerPage = 6) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\n\n  const paginatedData = useMemo(() => {\n    // S'assurer que data est un tableau\n    const safeData = Array.isArray(data) ? data : [];\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return safeData.slice(startIndex, endIndex);\n  }, [data, currentPage, itemsPerPage]);\n\n  const totalPages = Math.ceil((Array.isArray(data) ? data.length : 0) / itemsPerPage);\n\n  const goToPage = (page) => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  const changeItemsPerPage = (newItemsPerPage) => {\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1); // Reset to first page when changing items per page\n  };\n\n  const goToFirstPage = () => setCurrentPage(1);\n  const goToLastPage = () => setCurrentPage(totalPages);\n  const goToNextPage = () => goToPage(currentPage + 1);\n  const goToPreviousPage = () => goToPage(currentPage - 1);\n\n  return {\n    currentPage,\n    totalPages,\n    itemsPerPage,\n    paginatedData,\n    totalItems: data.length,\n    goToPage,\n    changeItemsPerPage,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    hasNextPage: currentPage < totalPages,\n    hasPreviousPage: currentPage > 1,\n  };\n};\n\nexport default usePagination;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAEzC,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,mBAAmB,GAAG,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACI,mBAAmB,CAAC;EAErE,MAAMM,aAAa,GAAGT,OAAO,CAAC,MAAM;IAClC;IACA,MAAMU,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACV,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;IAChD,MAAMW,UAAU,GAAG,CAACR,WAAW,GAAG,CAAC,IAAIE,YAAY;IACnD,MAAMO,QAAQ,GAAGD,UAAU,GAAGN,YAAY;IAC1C,OAAOG,QAAQ,CAACK,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EAC7C,CAAC,EAAE,CAACZ,IAAI,EAAEG,WAAW,EAAEE,YAAY,CAAC,CAAC;EAErC,MAAMS,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACP,KAAK,CAACC,OAAO,CAACV,IAAI,CAAC,GAAGA,IAAI,CAACiB,MAAM,GAAG,CAAC,IAAIZ,YAAY,CAAC;EAEpF,MAAMa,QAAQ,GAAIC,IAAI,IAAK;IACzB,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAIL,UAAU,EAAE;MACnCV,cAAc,CAACe,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAIC,eAAe,IAAK;IAC9Cf,eAAe,CAACe,eAAe,CAAC;IAChCjB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMkB,aAAa,GAAGA,CAAA,KAAMlB,cAAc,CAAC,CAAC,CAAC;EAC7C,MAAMmB,YAAY,GAAGA,CAAA,KAAMnB,cAAc,CAACU,UAAU,CAAC;EACrD,MAAMU,YAAY,GAAGA,CAAA,KAAMN,QAAQ,CAACf,WAAW,GAAG,CAAC,CAAC;EACpD,MAAMsB,gBAAgB,GAAGA,CAAA,KAAMP,QAAQ,CAACf,WAAW,GAAG,CAAC,CAAC;EAExD,OAAO;IACLA,WAAW;IACXW,UAAU;IACVT,YAAY;IACZE,aAAa;IACbmB,UAAU,EAAE1B,IAAI,CAACiB,MAAM;IACvBC,QAAQ;IACRE,kBAAkB;IAClBE,aAAa;IACbC,YAAY;IACZC,YAAY;IACZC,gBAAgB;IAChBE,WAAW,EAAExB,WAAW,GAAGW,UAAU;IACrCc,eAAe,EAAEzB,WAAW,GAAG;EACjC,CAAC;AACH,CAAC;AAACD,EAAA,CA7CIH,aAAa;AA+CnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}