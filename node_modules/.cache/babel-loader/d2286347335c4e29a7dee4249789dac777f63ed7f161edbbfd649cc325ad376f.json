{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\modifier\\\\Gestion_bibliotheque\\\\espace_client_app\\\\frontend\\\\src\\\\components\\\\NotificationToast.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationToast = () => {\n  _s();\n  const {\n    state,\n    actions\n  } = useApp();\n  const getToastIcon = type => {\n    switch (type) {\n      case 'success':\n        return 'fas fa-check-circle';\n      case 'error':\n        return 'fas fa-exclamation-circle';\n      case 'warning':\n        return 'fas fa-exclamation-triangle';\n      case 'info':\n        return 'fas fa-info-circle';\n      default:\n        return 'fas fa-bell';\n    }\n  };\n  const getToastClass = type => {\n    switch (type) {\n      case 'success':\n        return 'toast-success';\n      case 'error':\n        return 'toast-error';\n      case 'warning':\n        return 'toast-warning';\n      case 'info':\n        return 'toast-info';\n      default:\n        return 'toast-info';\n    }\n  };\n  if (state.notifications.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toast-container\",\n    children: state.notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toast show ${getToastClass(notification.type)}`,\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `${getToastIcon(notification.type)} me-2`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"me-auto\",\n          children: notification.title || notification.type.charAt(0).toUpperCase() + notification.type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          onClick: () => actions.removeNotification(notification.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-body\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationToast, \"a/VQVKaSEZNRpOPaG3O7DOBByIo=\", false, function () {\n  return [useApp];\n});\n_c = NotificationToast;\nexport default NotificationToast;\nvar _c;\n$RefreshReg$(_c, \"NotificationToast\");","map":{"version":3,"names":["React","useApp","jsxDEV","_jsxDEV","NotificationToast","_s","state","actions","getToastIcon","type","getToastClass","notifications","length","className","children","map","notification","role","fileName","_jsxFileName","lineNumber","columnNumber","title","charAt","toUpperCase","slice","onClick","removeNotification","id","message","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/components/NotificationToast.js"],"sourcesContent":["import React from 'react';\nimport { useApp } from '../contexts/AppContext';\n\nconst NotificationToast = () => {\n  const { state, actions } = useApp();\n\n  const getToastIcon = (type) => {\n    switch (type) {\n      case 'success':\n        return 'fas fa-check-circle';\n      case 'error':\n        return 'fas fa-exclamation-circle';\n      case 'warning':\n        return 'fas fa-exclamation-triangle';\n      case 'info':\n        return 'fas fa-info-circle';\n      default:\n        return 'fas fa-bell';\n    }\n  };\n\n  const getToastClass = (type) => {\n    switch (type) {\n      case 'success':\n        return 'toast-success';\n      case 'error':\n        return 'toast-error';\n      case 'warning':\n        return 'toast-warning';\n      case 'info':\n        return 'toast-info';\n      default:\n        return 'toast-info';\n    }\n  };\n\n  if (state.notifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"toast-container\">\n      {state.notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`toast show ${getToastClass(notification.type)}`}\n          role=\"alert\"\n        >\n          <div className=\"toast-header\">\n            <i className={`${getToastIcon(notification.type)} me-2`}></i>\n            <strong className=\"me-auto\">\n              {notification.title || notification.type.charAt(0).toUpperCase() + notification.type.slice(1)}\n            </strong>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => actions.removeNotification(notification.id)}\n            ></button>\n          </div>\n          <div className=\"toast-body\">\n            {notification.message}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NotificationToast;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGN,MAAM,CAAC,CAAC;EAEnC,MAAMO,YAAY,GAAIC,IAAI,IAAK;IAC7B,QAAQA,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,qBAAqB;MAC9B,KAAK,OAAO;QACV,OAAO,2BAA2B;MACpC,KAAK,SAAS;QACZ,OAAO,6BAA6B;MACtC,KAAK,MAAM;QACT,OAAO,oBAAoB;MAC7B;QACE,OAAO,aAAa;IACxB;EACF,CAAC;EAED,MAAMC,aAAa,GAAID,IAAI,IAAK;IAC9B,QAAQA,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,eAAe;MACxB,KAAK,OAAO;QACV,OAAO,aAAa;MACtB,KAAK,SAAS;QACZ,OAAO,eAAe;MACxB,KAAK,MAAM;QACT,OAAO,YAAY;MACrB;QACE,OAAO,YAAY;IACvB;EACF,CAAC;EAED,IAAIH,KAAK,CAACK,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;IACpC,OAAO,IAAI;EACb;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BR,KAAK,CAACK,aAAa,CAACI,GAAG,CAAEC,YAAY,iBACpCb,OAAA;MAEEU,SAAS,EAAE,cAAcH,aAAa,CAACM,YAAY,CAACP,IAAI,CAAC,EAAG;MAC5DQ,IAAI,EAAC,OAAO;MAAAH,QAAA,gBAEZX,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BX,OAAA;UAAGU,SAAS,EAAE,GAAGL,YAAY,CAACQ,YAAY,CAACP,IAAI,CAAC;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7DlB,OAAA;UAAQU,SAAS,EAAC,SAAS;UAAAC,QAAA,EACxBE,YAAY,CAACM,KAAK,IAAIN,YAAY,CAACP,IAAI,CAACc,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGR,YAAY,CAACP,IAAI,CAACgB,KAAK,CAAC,CAAC;QAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC,eACTlB,OAAA;UACEM,IAAI,EAAC,QAAQ;UACbI,SAAS,EAAC,WAAW;UACrBa,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAACoB,kBAAkB,CAACX,YAAY,CAACY,EAAE;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNlB,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBE,YAAY,CAACa;MAAO;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA,GAjBDL,YAAY,CAACY,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/DID,iBAAiB;EAAA,QACMH,MAAM;AAAA;AAAA6B,EAAA,GAD7B1B,iBAAiB;AAiEvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}