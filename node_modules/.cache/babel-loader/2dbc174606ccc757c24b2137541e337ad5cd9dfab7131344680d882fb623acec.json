{"ast":null,"code":"import{api}from'./authService';class DocumentService{// Obtenir la liste des documents\nasync getDocuments(){try{const response=await api.get('/documents/');return response.data;}catch(error){var _error$response;throw((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message;}}// Obtenir un document spécifique\nasync getDocument(id){try{const response=await api.get(`/documents/${id}/`);return response.data;}catch(error){var _error$response2;throw((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message;}}// Uploader un nouveau document\nasync uploadDocument(formData){try{const response=await api.post('/upload/',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){var _error$response3;throw((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message;}}// Modifier un document\nasync updateDocument(id,data){try{console.log('Mise à jour du document:',id,data);const response=await api.patch(`/documents/${id}/`,data);console.log('Réponse de mise à jour:',response.data);return response.data;}catch(error){var _error$response4;console.error('Erreur lors de la modification:',error);throw((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data)||error.message;}}// Supprimer un document\nasync deleteDocument(id){try{console.log('Suppression du document:',id);const response=await api.delete(`/documents/${id}/`);console.log('Document supprimé avec succès');return response.data||true;}catch(error){var _error$response5;console.error('Erreur lors de la suppression:',error);throw((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data)||error.message;}}// Télécharger un document\nasync downloadDocument(id,filename){try{const response=await api.get(`/documents/${id}/download/`,{responseType:'blob'});// Obtenir le type MIME depuis les headers de la réponse\nconst contentType=response.headers['content-type']||'application/octet-stream';// Créer un blob avec le bon type MIME\nconst blob=new Blob([response.data],{type:contentType});const url=window.URL.createObjectURL(blob);// Créer et déclencher le téléchargement\nconst link=document.createElement('a');link.href=url;link.download=filename||`document_${id}`;link.style.display='none';document.body.appendChild(link);link.click();// Nettoyer\ndocument.body.removeChild(link);window.URL.revokeObjectURL(url);return true;}catch(error){console.error('Erreur lors du téléchargement:',error);throw error;}}// Formater la taille du fichier\nformatFileSize(bytes){if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];}// Obtenir l'icône selon le type de fichier\ngetFileIcon(extension){const iconMap={'.pdf':'fas fa-file-pdf text-danger','.doc':'fas fa-file-word text-primary','.docx':'fas fa-file-word text-primary','.txt':'fas fa-file-alt text-secondary','.jpg':'fas fa-file-image text-success','.jpeg':'fas fa-file-image text-success','.png':'fas fa-file-image text-success','.gif':'fas fa-file-image text-success','.zip':'fas fa-file-archive text-warning','.rar':'fas fa-file-archive text-warning'};return iconMap[extension===null||extension===void 0?void 0:extension.toLowerCase()]||'fas fa-file text-muted';}}export default new DocumentService();","map":{"version":3,"names":["api","DocumentService","getDocuments","response","get","data","error","_error$response","message","getDocument","id","_error$response2","uploadDocument","formData","post","headers","_error$response3","updateDocument","console","log","patch","_error$response4","deleteDocument","delete","_error$response5","downloadDocument","filename","responseType","contentType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","style","display","body","appendChild","click","removeChild","revokeObjectURL","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","getFileIcon","extension","iconMap","toLowerCase"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/services/documentService.js"],"sourcesContent":["import { api } from './authService';\n\nclass DocumentService {\n  // Obtenir la liste des documents\n  async getDocuments() {\n    try {\n      const response = await api.get('/documents/');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Obtenir un document spécifique\n  async getDocument(id) {\n    try {\n      const response = await api.get(`/documents/${id}/`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Uploader un nouveau document\n  async uploadDocument(formData) {\n    try {\n      const response = await api.post('/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Modifier un document\n  async updateDocument(id, data) {\n    try {\n      console.log('Mise à jour du document:', id, data);\n      const response = await api.patch(`/documents/${id}/`, data);\n      console.log('Réponse de mise à jour:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la modification:', error);\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Supprimer un document\n  async deleteDocument(id) {\n    try {\n      console.log('Suppression du document:', id);\n      const response = await api.delete(`/documents/${id}/`);\n      console.log('Document supprimé avec succès');\n      return response.data || true;\n    } catch (error) {\n      console.error('Erreur lors de la suppression:', error);\n      throw error.response?.data || error.message;\n    }\n  }\n\n\n\n  // Télécharger un document\n  async downloadDocument(id, filename) {\n    try {\n      const response = await api.get(`/documents/${id}/download/`, {\n        responseType: 'blob',\n      });\n\n      // Obtenir le type MIME depuis les headers de la réponse\n      const contentType = response.headers['content-type'] || 'application/octet-stream';\n\n      // Créer un blob avec le bon type MIME\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n\n      // Créer et déclencher le téléchargement\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename || `document_${id}`;\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n\n      // Nettoyer\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n\n      return true;\n    } catch (error) {\n      console.error('Erreur lors du téléchargement:', error);\n      throw error;\n    }\n  }\n\n  // Formater la taille du fichier\n  formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  // Obtenir l'icône selon le type de fichier\n  getFileIcon(extension) {\n    const iconMap = {\n      '.pdf': 'fas fa-file-pdf text-danger',\n      '.doc': 'fas fa-file-word text-primary',\n      '.docx': 'fas fa-file-word text-primary',\n      '.txt': 'fas fa-file-alt text-secondary',\n      '.jpg': 'fas fa-file-image text-success',\n      '.jpeg': 'fas fa-file-image text-success',\n      '.png': 'fas fa-file-image text-success',\n      '.gif': 'fas fa-file-image text-success',\n      '.zip': 'fas fa-file-archive text-warning',\n      '.rar': 'fas fa-file-archive text-warning',\n    };\n    \n    return iconMap[extension?.toLowerCase()] || 'fas fa-file text-muted';\n  }\n}\n\nexport default new DocumentService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}