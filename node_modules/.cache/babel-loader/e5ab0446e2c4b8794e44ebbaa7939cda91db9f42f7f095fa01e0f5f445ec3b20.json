{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\modifier\\\\Gestion_bibliotheque\\\\espace_client_app\\\\frontend\\\\src\\\\pages\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport adminService from '../services/adminService';\nimport AdminNavbar from '../components/AdminNavbar';\nimport AdminStats from '../components/AdminStats';\nimport UsersTable from '../components/UsersTable';\nimport UserFormModal from '../components/UserFormModal';\nimport ConfirmModal from '../components/ConfirmModal';\nimport { useApp } from '../contexts/AppContext';\nimport '../styles/AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    actions,\n    state\n  } = useApp();\n  const currentUser = state.user;\n\n  // États\n  const [users, setUsers] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // États des modals\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [actionUser, setActionUser] = useState(null);\n  const [actionType, setActionType] = useState('');\n\n  // États des filtres\n  const [filters, setFilters] = useState({\n    search: '',\n    role: '',\n    status: ''\n  });\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  // Vérifier les droits admin au chargement\n  useEffect(() => {\n    const checkAdminAccess = async () => {\n      const isAdmin = await adminService.checkAdminStatus();\n      if (!isAdmin) {\n        actions.showNotification('error', 'Accès refusé. Droits administrateur requis.');\n        navigate('/dashboard');\n        return;\n      }\n      loadData();\n    };\n    checkAdminAccess();\n  }, [navigate, refreshTrigger, actions]);\n\n  // Afficher les notifications après redirection\n  useEffect(() => {\n    const storedNotification = sessionStorage.getItem('adminNotification');\n    if (storedNotification) {\n      try {\n        const {\n          message,\n          type\n        } = JSON.parse(storedNotification);\n        setTimeout(() => {\n          actions.showNotification(type, message);\n        }, 500); // Délai pour que la page soit complètement chargée\n\n        // Supprimer la notification du sessionStorage\n        sessionStorage.removeItem('adminNotification');\n      } catch (error) {\n        console.error('Erreur lors de la lecture de la notification:', error);\n      }\n    }\n  }, [location.search, actions]); // Se déclenche quand l'URL change\n\n  const loadData = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      console.log('AdminPanel: Début du chargement des données');\n\n      // Charger les utilisateurs\n      console.log('AdminPanel: Chargement des utilisateurs...');\n      const usersResult = await adminService.getUsers(filters);\n      console.log('AdminPanel: Résultat utilisateurs:', usersResult);\n      if (usersResult.success) {\n        const userData = usersResult.data.results || usersResult.data || [];\n        console.log('AdminPanel: Données utilisateurs:', userData);\n        setUsers(Array.isArray(userData) ? userData : []);\n      } else {\n        console.error('AdminPanel: Erreur utilisateurs:', usersResult.error);\n        setError(usersResult.error);\n        return; // Arrêter ici si erreur utilisateurs\n      }\n\n      // Charger les statistiques\n      console.log('AdminPanel: Chargement des statistiques...');\n      const statsResult = await adminService.getAdminStats();\n      console.log('AdminPanel: Résultat statistiques:', statsResult);\n      if (statsResult.success) {\n        setStats(statsResult.data);\n      } else {\n        console.warn('AdminPanel: Erreur statistiques (non bloquante):', statsResult.error);\n        // Ne pas bloquer pour les stats, utiliser des valeurs par défaut\n        setStats({\n          total_users: 0,\n          admin_users: 0,\n          normal_users: 0,\n          active_users: 0,\n          inactive_users: 0,\n          total_documents: 0,\n          recent_users: 0,\n          recent_documents: 0\n        });\n      }\n    } catch (err) {\n      console.error('AdminPanel: Erreur générale:', err);\n      setError('Erreur lors du chargement des données: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Gestionnaires d'événements\n  const handleCreateUser = () => {\n    setEditingUser(null);\n    setShowUserModal(true);\n  };\n  const handleEditUser = user => {\n    setEditingUser(user);\n    setShowUserModal(true);\n  };\n  const handleDeleteUser = user => {\n    setActionUser(user);\n    setActionType('delete');\n    setShowConfirmModal(true);\n  };\n  const handleToggleAdmin = user => {\n    setActionUser(user);\n    setActionType('toggleAdmin');\n    setShowConfirmModal(true);\n  };\n  const handleToggleActive = user => {\n    setActionUser(user);\n    setActionType('toggleActive');\n    setShowConfirmModal(true);\n  };\n  const handleUserSubmit = async userData => {\n    try {\n      console.log('AdminPanel: Action utilisateur -', editingUser ? 'Modification' : 'Création');\n      let result;\n      const actionType = editingUser ? 'Modification' : 'Création';\n      if (editingUser) {\n        result = await adminService.updateUser(editingUser.id, userData);\n      } else {\n        result = await adminService.createUser(userData);\n      }\n      if (result.success) {\n        setShowUserModal(false);\n\n        // Redirection vers la même page pour rafraîchissement complet\n        console.log('AdminPanel: Redirection pour rafraîchissement complet après', actionType);\n        redirectToSamePage(`✅ ${actionType} réussie - Page actualisée automatiquement`);\n      } else {\n        actions.showNotification('error', result.error);\n      }\n    } catch (error) {\n      console.error('AdminPanel: Erreur:', error);\n      actions.showNotification('error', 'Erreur lors de l\\'opération');\n    }\n  };\n  const handleConfirmAction = async () => {\n    if (!actionUser) return;\n    try {\n      console.log('AdminPanel: Action -', actionType, 'pour', actionUser.email);\n      let result;\n      let actionName = '';\n      switch (actionType) {\n        case 'delete':\n          result = await adminService.deleteUser(actionUser.id);\n          actionName = 'Suppression';\n          break;\n        case 'toggleAdmin':\n          result = await adminService.toggleUserAdmin(actionUser.id);\n          actionName = actionUser.is_staff ? 'Rétrogradation' : 'Promotion';\n          break;\n        case 'toggleActive':\n          result = await adminService.toggleUserActive(actionUser.id);\n          actionName = actionUser.is_active ? 'Désactivation' : 'Activation';\n          break;\n        default:\n          return;\n      }\n      if (result.success) {\n        setShowConfirmModal(false);\n        setActionUser(null);\n        setActionType('');\n\n        // Redirection vers la même page pour rafraîchissement complet\n        console.log('AdminPanel: Redirection pour rafraîchissement complet après', actionName);\n        redirectToSamePage(`✅ ${actionName} réussie - Page actualisée automatiquement`);\n      } else {\n        actions.showNotification('error', result.error);\n      }\n    } catch (error) {\n      console.error('AdminPanel: Erreur lors de l\\'action:', error);\n      actions.showNotification('error', 'Erreur lors de l\\'opération');\n    } finally {\n      setShowConfirmModal(false);\n      setActionUser(null);\n      setActionType('');\n    }\n  };\n  const handleFiltersChange = newFilters => {\n    setFilters(newFilters);\n    setRefreshTrigger(prev => prev + 1);\n  };\n\n  // Fonction pour rediriger vers la même page (rafraîchissement complet)\n  const redirectToSamePage = (message, type = 'success') => {\n    console.log('AdminPanel: Redirection vers la même page pour rafraîchissement complet');\n\n    // Stocker le message dans sessionStorage pour l'afficher après redirection\n    sessionStorage.setItem('adminNotification', JSON.stringify({\n      message,\n      type\n    }));\n\n    // Rediriger vers la même page avec un paramètre pour forcer le rechargement\n    const currentPath = location.pathname;\n    const timestamp = Date.now();\n    navigate(`${currentPath}?refresh=${timestamp}`, {\n      replace: true\n    });\n  };\n  const getConfirmMessage = () => {\n    if (!actionUser) return '';\n    switch (actionType) {\n      case 'delete':\n        return `Êtes-vous sûr de vouloir supprimer l'utilisateur \"${actionUser.email}\" ? Cette action est irréversible.`;\n      case 'toggleAdmin':\n        return actionUser.is_staff ? `Êtes-vous sûr de vouloir rétrograder \"${actionUser.email}\" en utilisateur normal ?` : `Êtes-vous sûr de vouloir promouvoir \"${actionUser.email}\" en administrateur ?`;\n      case 'toggleActive':\n        return actionUser.is_active ? `Êtes-vous sûr de vouloir désactiver l'utilisateur \"${actionUser.email}\" ?` : `Êtes-vous sûr de vouloir activer l'utilisateur \"${actionUser.email}\" ?`;\n      default:\n        return '';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Chargement...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3\",\n          children: \"Chargement du panneau d'administration...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-triangle me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setRefreshTrigger(prev => prev + 1),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-redo me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), \"R\\xE9essayer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container admin-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"admin-title mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-users-cog me-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, this), \"Panneau d'Administration\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-subtitle mb-0\",\n                  children: \"Gestion des utilisateurs et du syst\\xE8me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modern-admin-btn\",\n                onClick: handleCreateUser,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-user-plus me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this), \"Nouvel Utilisateur\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminStats, {\n        stats: stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-card-body\",\n              children: /*#__PURE__*/_jsxDEV(UsersTable, {\n                users: users,\n                currentUser: currentUser,\n                filters: filters,\n                onFiltersChange: handleFiltersChange,\n                onEditUser: handleEditUser,\n                onDeleteUser: handleDeleteUser,\n                onToggleAdmin: handleToggleAdmin,\n                onToggleActive: handleToggleActive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserFormModal, {\n      show: showUserModal,\n      user: editingUser,\n      onHide: () => setShowUserModal(false),\n      onSubmit: handleUserSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      show: showConfirmModal,\n      title: \"Confirmation\",\n      message: getConfirmMessage(),\n      onConfirm: handleConfirmAction,\n      onCancel: () => setShowConfirmModal(false),\n      confirmButtonClass: actionType === 'delete' ? 'btn-danger' : 'btn-primary'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"LPMYb665BC+JqlzFVWCGSkjMTGY=\", false, function () {\n  return [useNavigate, useLocation, useApp];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","adminService","AdminNavbar","AdminStats","UsersTable","UserFormModal","ConfirmModal","useApp","jsxDEV","_jsxDEV","AdminPanel","_s","navigate","location","actions","state","currentUser","user","users","setUsers","stats","setStats","loading","setLoading","error","setError","showUserModal","setShowUserModal","showConfirmModal","setShowConfirmModal","editingUser","setEditingUser","actionUser","setActionUser","actionType","setActionType","filters","setFilters","search","role","status","refreshTrigger","setRefreshTrigger","checkAdminAccess","isAdmin","checkAdminStatus","showNotification","loadData","storedNotification","sessionStorage","getItem","message","type","JSON","parse","setTimeout","removeItem","console","log","usersResult","getUsers","success","userData","data","results","Array","isArray","statsResult","getAdminStats","warn","total_users","admin_users","normal_users","active_users","inactive_users","total_documents","recent_users","recent_documents","err","handleCreateUser","handleEditUser","handleDeleteUser","handleToggleAdmin","handleToggleActive","handleUserSubmit","result","updateUser","id","createUser","redirectToSamePage","handleConfirmAction","email","actionName","deleteUser","toggleUserAdmin","is_staff","toggleUserActive","is_active","handleFiltersChange","newFilters","prev","setItem","stringify","currentPath","pathname","timestamp","Date","now","replace","getConfirmMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onFiltersChange","onEditUser","onDeleteUser","onToggleAdmin","onToggleActive","show","onHide","onSubmit","title","onConfirm","onCancel","confirmButtonClass","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport adminService from '../services/adminService';\nimport AdminNavbar from '../components/AdminNavbar';\nimport AdminStats from '../components/AdminStats';\nimport UsersTable from '../components/UsersTable';\nimport UserFormModal from '../components/UserFormModal';\nimport ConfirmModal from '../components/ConfirmModal';\nimport { useApp } from '../contexts/AppContext';\nimport '../styles/AdminPanel.css';\n\nconst AdminPanel = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { actions, state } = useApp();\n  const currentUser = state.user;\n  \n  // États\n  const [users, setUsers] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  // États des modals\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [actionUser, setActionUser] = useState(null);\n  const [actionType, setActionType] = useState('');\n  \n  // États des filtres\n  const [filters, setFilters] = useState({\n    search: '',\n    role: '',\n    status: ''\n  });\n  \n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  // Vérifier les droits admin au chargement\n  useEffect(() => {\n    const checkAdminAccess = async () => {\n      const isAdmin = await adminService.checkAdminStatus();\n      if (!isAdmin) {\n        actions.showNotification('error', 'Accès refusé. Droits administrateur requis.');\n        navigate('/dashboard');\n        return;\n      }\n      loadData();\n    };\n\n    checkAdminAccess();\n  }, [navigate, refreshTrigger, actions]);\n\n  // Afficher les notifications après redirection\n  useEffect(() => {\n    const storedNotification = sessionStorage.getItem('adminNotification');\n    if (storedNotification) {\n      try {\n        const { message, type } = JSON.parse(storedNotification);\n        setTimeout(() => {\n          actions.showNotification(type, message);\n        }, 500); // Délai pour que la page soit complètement chargée\n\n        // Supprimer la notification du sessionStorage\n        sessionStorage.removeItem('adminNotification');\n      } catch (error) {\n        console.error('Erreur lors de la lecture de la notification:', error);\n      }\n    }\n  }, [location.search, actions]); // Se déclenche quand l'URL change\n\n  const loadData = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      console.log('AdminPanel: Début du chargement des données');\n\n      // Charger les utilisateurs\n      console.log('AdminPanel: Chargement des utilisateurs...');\n      const usersResult = await adminService.getUsers(filters);\n      console.log('AdminPanel: Résultat utilisateurs:', usersResult);\n\n      if (usersResult.success) {\n        const userData = usersResult.data.results || usersResult.data || [];\n        console.log('AdminPanel: Données utilisateurs:', userData);\n        setUsers(Array.isArray(userData) ? userData : []);\n      } else {\n        console.error('AdminPanel: Erreur utilisateurs:', usersResult.error);\n        setError(usersResult.error);\n        return; // Arrêter ici si erreur utilisateurs\n      }\n\n      // Charger les statistiques\n      console.log('AdminPanel: Chargement des statistiques...');\n      const statsResult = await adminService.getAdminStats();\n      console.log('AdminPanel: Résultat statistiques:', statsResult);\n\n      if (statsResult.success) {\n        setStats(statsResult.data);\n      } else {\n        console.warn('AdminPanel: Erreur statistiques (non bloquante):', statsResult.error);\n        // Ne pas bloquer pour les stats, utiliser des valeurs par défaut\n        setStats({\n          total_users: 0,\n          admin_users: 0,\n          normal_users: 0,\n          active_users: 0,\n          inactive_users: 0,\n          total_documents: 0,\n          recent_users: 0,\n          recent_documents: 0\n        });\n      }\n    } catch (err) {\n      console.error('AdminPanel: Erreur générale:', err);\n      setError('Erreur lors du chargement des données: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Gestionnaires d'événements\n  const handleCreateUser = () => {\n    setEditingUser(null);\n    setShowUserModal(true);\n  };\n\n  const handleEditUser = (user) => {\n    setEditingUser(user);\n    setShowUserModal(true);\n  };\n\n  const handleDeleteUser = (user) => {\n    setActionUser(user);\n    setActionType('delete');\n    setShowConfirmModal(true);\n  };\n\n  const handleToggleAdmin = (user) => {\n    setActionUser(user);\n    setActionType('toggleAdmin');\n    setShowConfirmModal(true);\n  };\n\n  const handleToggleActive = (user) => {\n    setActionUser(user);\n    setActionType('toggleActive');\n    setShowConfirmModal(true);\n  };\n\n  const handleUserSubmit = async (userData) => {\n    try {\n      console.log('AdminPanel: Action utilisateur -', editingUser ? 'Modification' : 'Création');\n\n      let result;\n      const actionType = editingUser ? 'Modification' : 'Création';\n\n      if (editingUser) {\n        result = await adminService.updateUser(editingUser.id, userData);\n      } else {\n        result = await adminService.createUser(userData);\n      }\n\n      if (result.success) {\n        setShowUserModal(false);\n\n        // Redirection vers la même page pour rafraîchissement complet\n        console.log('AdminPanel: Redirection pour rafraîchissement complet après', actionType);\n        redirectToSamePage(`✅ ${actionType} réussie - Page actualisée automatiquement`);\n\n      } else {\n        actions.showNotification('error', result.error);\n      }\n    } catch (error) {\n      console.error('AdminPanel: Erreur:', error);\n      actions.showNotification('error', 'Erreur lors de l\\'opération');\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!actionUser) return;\n\n    try {\n      console.log('AdminPanel: Action -', actionType, 'pour', actionUser.email);\n\n      let result;\n      let actionName = '';\n\n      switch (actionType) {\n        case 'delete':\n          result = await adminService.deleteUser(actionUser.id);\n          actionName = 'Suppression';\n          break;\n        case 'toggleAdmin':\n          result = await adminService.toggleUserAdmin(actionUser.id);\n          actionName = actionUser.is_staff ? 'Rétrogradation' : 'Promotion';\n          break;\n        case 'toggleActive':\n          result = await adminService.toggleUserActive(actionUser.id);\n          actionName = actionUser.is_active ? 'Désactivation' : 'Activation';\n          break;\n        default:\n          return;\n      }\n\n      if (result.success) {\n        setShowConfirmModal(false);\n        setActionUser(null);\n        setActionType('');\n\n        // Redirection vers la même page pour rafraîchissement complet\n        console.log('AdminPanel: Redirection pour rafraîchissement complet après', actionName);\n        redirectToSamePage(`✅ ${actionName} réussie - Page actualisée automatiquement`);\n\n      } else {\n        actions.showNotification('error', result.error);\n      }\n    } catch (error) {\n      console.error('AdminPanel: Erreur lors de l\\'action:', error);\n      actions.showNotification('error', 'Erreur lors de l\\'opération');\n    } finally {\n      setShowConfirmModal(false);\n      setActionUser(null);\n      setActionType('');\n    }\n  };\n\n  const handleFiltersChange = (newFilters) => {\n    setFilters(newFilters);\n    setRefreshTrigger(prev => prev + 1);\n  };\n\n  // Fonction pour rediriger vers la même page (rafraîchissement complet)\n  const redirectToSamePage = (message, type = 'success') => {\n    console.log('AdminPanel: Redirection vers la même page pour rafraîchissement complet');\n\n    // Stocker le message dans sessionStorage pour l'afficher après redirection\n    sessionStorage.setItem('adminNotification', JSON.stringify({ message, type }));\n\n    // Rediriger vers la même page avec un paramètre pour forcer le rechargement\n    const currentPath = location.pathname;\n    const timestamp = Date.now();\n    navigate(`${currentPath}?refresh=${timestamp}`, { replace: true });\n  };\n\n  const getConfirmMessage = () => {\n    if (!actionUser) return '';\n    \n    switch (actionType) {\n      case 'delete':\n        return `Êtes-vous sûr de vouloir supprimer l'utilisateur \"${actionUser.email}\" ? Cette action est irréversible.`;\n      case 'toggleAdmin':\n        return actionUser.is_staff \n          ? `Êtes-vous sûr de vouloir rétrograder \"${actionUser.email}\" en utilisateur normal ?`\n          : `Êtes-vous sûr de vouloir promouvoir \"${actionUser.email}\" en administrateur ?`;\n      case 'toggleActive':\n        return actionUser.is_active\n          ? `Êtes-vous sûr de vouloir désactiver l'utilisateur \"${actionUser.email}\" ?`\n          : `Êtes-vous sûr de vouloir activer l'utilisateur \"${actionUser.email}\" ?`;\n      default:\n        return '';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-vh-100 d-flex align-items-center justify-content-center\">\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Chargement...</span>\n          </div>\n          <p className=\"mt-3\">Chargement du panneau d'administration...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-vh-100 d-flex align-items-center justify-content-center\">\n        <div className=\"text-center\">\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <i className=\"fas fa-exclamation-triangle me-2\"></i>\n            {error}\n          </div>\n          <button \n            className=\"btn btn-primary\" \n            onClick={() => setRefreshTrigger(prev => prev + 1)}\n          >\n            <i className=\"fas fa-redo me-2\"></i>\n            Réessayer\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-container admin-fade-in\">\n      <AdminNavbar />\n      <div className=\"container-fluid py-4\">\n        {/* En-tête moderne */}\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <div className=\"admin-header\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <h1 className=\"admin-title mb-0\">\n                    <i className=\"fas fa-users-cog me-3\"></i>\n                    Panneau d'Administration\n                  </h1>\n                  <p className=\"admin-subtitle mb-0\">Gestion des utilisateurs et du système</p>\n                </div>\n                <button\n                  className=\"modern-admin-btn\"\n                  onClick={handleCreateUser}\n                >\n                  <i className=\"fas fa-user-plus me-2\"></i>\n                  Nouvel Utilisateur\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Statistiques */}\n        <AdminStats stats={stats} />\n        {/* Table des utilisateurs */}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"admin-card\">\n              <div className=\"admin-card-body\">\n                <UsersTable\n                  users={users}\n                  currentUser={currentUser}\n                  filters={filters}\n                  onFiltersChange={handleFiltersChange}\n                  onEditUser={handleEditUser}\n                  onDeleteUser={handleDeleteUser}\n                  onToggleAdmin={handleToggleAdmin}\n                  onToggleActive={handleToggleActive}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Modals */}\n      <UserFormModal\n        show={showUserModal}\n        user={editingUser}\n        onHide={() => setShowUserModal(false)}\n        onSubmit={handleUserSubmit}\n      />\n      <ConfirmModal\n        show={showConfirmModal}\n        title=\"Confirmation\"\n        message={getConfirmMessage()}\n        onConfirm={handleConfirmAction}\n        onCancel={() => setShowConfirmModal(false)}\n        confirmButtonClass={actionType === 'delete' ? 'btn-danger' : 'btn-primary'}\n      />\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}