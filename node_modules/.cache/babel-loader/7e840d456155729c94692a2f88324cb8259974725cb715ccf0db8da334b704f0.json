{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={theme:localStorage.getItem('theme')||'light',notifications:[],loading:false,user:(()=>{// Essayer de charger l'utilisateur depuis le localStorage au démarrage\ntry{const storedUser=localStorage.getItem('user');return storedUser?JSON.parse(storedUser):null;}catch(error){console.error('Erreur lors du chargement de l\\'utilisateur depuis localStorage:',error);return null;}})(),documents:[],searchQuery:'',selectedFilter:'all',stats:{totalDocuments:0,totalSize:0,recentUploads:0}};// Action types\nconst ActionTypes={SET_THEME:'SET_THEME',ADD_NOTIFICATION:'ADD_NOTIFICATION',REMOVE_NOTIFICATION:'REMOVE_NOTIFICATION',SET_LOADING:'SET_LOADING',SET_USER:'SET_USER',SET_DOCUMENTS:'SET_DOCUMENTS',ADD_DOCUMENT:'ADD_DOCUMENT',UPDATE_DOCUMENT:'UPDATE_DOCUMENT',REMOVE_DOCUMENT:'REMOVE_DOCUMENT',SET_SEARCH_QUERY:'SET_SEARCH_QUERY',SET_FILTER:'SET_FILTER',UPDATE_STATS:'UPDATE_STATS'};// Reducer\nconst appReducer=(state,action)=>{switch(action.type){case ActionTypes.SET_THEME:localStorage.setItem('theme',action.payload);document.documentElement.setAttribute('data-theme',action.payload);return{...state,theme:action.payload};case ActionTypes.ADD_NOTIFICATION:return{...state,notifications:[...state.notifications,{id:Date.now(),...action.payload}]};case ActionTypes.REMOVE_NOTIFICATION:return{...state,notifications:state.notifications.filter(n=>n.id!==action.payload)};case ActionTypes.SET_LOADING:return{...state,loading:action.payload};case ActionTypes.SET_USER:return{...state,user:action.payload};case ActionTypes.SET_DOCUMENTS:return{...state,documents:Array.isArray(action.payload)?action.payload:[]};case ActionTypes.ADD_DOCUMENT:return{...state,documents:[action.payload,...(Array.isArray(state.documents)?state.documents:[])]};case ActionTypes.UPDATE_DOCUMENT:return{...state,documents:Array.isArray(state.documents)?state.documents.map(doc=>doc.id===action.payload.id?action.payload:doc):[]};case ActionTypes.REMOVE_DOCUMENT:return{...state,documents:Array.isArray(state.documents)?state.documents.filter(doc=>doc.id!==action.payload):[]};case ActionTypes.SET_SEARCH_QUERY:return{...state,searchQuery:action.payload};case ActionTypes.SET_FILTER:return{...state,selectedFilter:action.payload};case ActionTypes.UPDATE_STATS:return{...state,stats:{...state.stats,...action.payload}};default:return state;}};// Context\nconst AppContext=/*#__PURE__*/createContext();// Provider component\nexport const AppProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(appReducer,initialState);// Initialize theme on mount\nuseEffect(()=>{document.documentElement.setAttribute('data-theme',state.theme);},[]);// Auto-remove notifications after 5 seconds\nuseEffect(()=>{state.notifications.forEach(notification=>{if(notification.autoRemove!==false){setTimeout(()=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:notification.id});},5000);}});},[state.notifications]);// Actions\nconst actions={toggleTheme:()=>{const newTheme=state.theme==='light'?'dark':'light';dispatch({type:ActionTypes.SET_THEME,payload:newTheme});},showNotification:function(type,message){let title=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';dispatch({type:ActionTypes.ADD_NOTIFICATION,payload:{type,message,title}});},removeNotification:id=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:id});},setLoading:loading=>{dispatch({type:ActionTypes.SET_LOADING,payload:loading});},setUser:user=>{dispatch({type:ActionTypes.SET_USER,payload:user});},// Charger l'utilisateur depuis le localStorage ou l'API\nloadUser:async()=>{try{// D'abord, essayer de charger depuis le localStorage\nconst storedUser=localStorage.getItem('user');if(storedUser){const user=JSON.parse(storedUser);dispatch({type:ActionTypes.SET_USER,payload:user});// Ensuite, essayer de récupérer les données à jour depuis l'API\ntry{const authService=await import('../services/authService');const updatedUser=await authService.default.getProfile();dispatch({type:ActionTypes.SET_USER,payload:updatedUser});}catch(apiError){// Si l'API échoue, on garde les données du localStorage\nconsole.warn('Impossible de récupérer le profil depuis l\\'API:',apiError);}}else{// Si pas de données dans localStorage, essayer l'API\nconst authService=await import('../services/authService');const user=await authService.default.getProfile();dispatch({type:ActionTypes.SET_USER,payload:user});}}catch(error){console.error('Erreur lors du chargement de l\\'utilisateur:',error);// Si tout échoue et qu'on est censé être connecté, rediriger vers login\nconst authService=await import('../services/authService');if(!authService.default.isAuthenticated()){window.location.href='/login';}}},setDocuments:documents=>{const documentsArray=Array.isArray(documents)?documents:[];dispatch({type:ActionTypes.SET_DOCUMENTS,payload:documentsArray});// Update stats\nconst totalSize=documentsArray.reduce((sum,doc)=>sum+(doc.file_size||0),0);const recentUploads=documentsArray.filter(doc=>{const uploadDate=new Date(doc.uploaded_at);const weekAgo=new Date();weekAgo.setDate(weekAgo.getDate()-7);return uploadDate>weekAgo;}).length;dispatch({type:ActionTypes.UPDATE_STATS,payload:{totalDocuments:documentsArray.length,totalSize,recentUploads}});},// Charger les documents depuis l'API\nloadDocuments:async()=>{try{const documentService=await import('../services/documentService');const documents=await documentService.default.getDocuments();dispatch({type:ActionTypes.SET_DOCUMENTS,payload:documents});// Update stats\nconst totalSize=documents.reduce((sum,doc)=>sum+(doc.file_size||0),0);const recentUploads=documents.filter(doc=>{const uploadDate=new Date(doc.uploaded_at||doc.created_at);const weekAgo=new Date();weekAgo.setDate(weekAgo.getDate()-7);return uploadDate>weekAgo;}).length;dispatch({type:ActionTypes.UPDATE_STATS,payload:{totalDocuments:documents.length,totalSize,recentUploads}});}catch(error){console.error('Erreur lors du chargement des documents:',error);actions.showNotification('error','Erreur lors du chargement des documents');}},addDocument:document=>{dispatch({type:ActionTypes.ADD_DOCUMENT,payload:document});actions.showNotification('success','Document ajouté avec succès','Succès');},// Mettre à jour un document\nupdateDocument:document=>{dispatch({type:ActionTypes.UPDATE_DOCUMENT,payload:document});actions.showNotification('success','Document modifié avec succès','Succès');},// Supprimer un document\ndeleteDocument:async documentId=>{try{const documentService=await import('../services/documentService');await documentService.default.deleteDocument(documentId);dispatch({type:ActionTypes.REMOVE_DOCUMENT,payload:documentId});actions.showNotification('success','Document supprimé avec succès');}catch(error){console.error('Erreur lors de la suppression:',error);actions.showNotification('error','Erreur lors de la suppression du document');throw error;}},removeDocument:id=>{dispatch({type:ActionTypes.REMOVE_DOCUMENT,payload:id});actions.showNotification('success','Document supprimé avec succès','Succès');},setSearchQuery:query=>{dispatch({type:ActionTypes.SET_SEARCH_QUERY,payload:query});},setFilter:filter=>{dispatch({type:ActionTypes.SET_FILTER,payload:filter});},// Filtered documents based on search and filter\ngetFilteredDocuments:()=>{// S'assurer que documents est un tableau\nlet filtered=Array.isArray(state.documents)?state.documents:[];// Apply search filter\nif(state.searchQuery){const query=state.searchQuery.toLowerCase();filtered=filtered.filter(doc=>doc.title.toLowerCase().includes(query)||doc.description.toLowerCase().includes(query));}// Apply type filter\nif(state.selectedFilter!=='all'){filtered=filtered.filter(doc=>doc.document_type===state.selectedFilter);}return filtered;}};return/*#__PURE__*/_jsx(AppContext.Provider,{value:{state,actions},children:children});};// Custom hook to use the context\nexport const useApp=()=>{const context=useContext(AppContext);if(!context){throw new Error('useApp must be used within an AppProvider');}return context;};export default AppContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsx","_jsx","initialState","theme","localStorage","getItem","notifications","loading","user","storedUser","JSON","parse","error","console","documents","searchQuery","selectedFilter","stats","totalDocuments","totalSize","recentUploads","ActionTypes","SET_THEME","ADD_NOTIFICATION","REMOVE_NOTIFICATION","SET_LOADING","SET_USER","SET_DOCUMENTS","ADD_DOCUMENT","UPDATE_DOCUMENT","REMOVE_DOCUMENT","SET_SEARCH_QUERY","SET_FILTER","UPDATE_STATS","appReducer","state","action","type","setItem","payload","document","documentElement","setAttribute","id","Date","now","filter","n","Array","isArray","map","doc","AppContext","AppProvider","_ref","children","dispatch","forEach","notification","autoRemove","setTimeout","actions","toggleTheme","newTheme","showNotification","message","title","arguments","length","undefined","removeNotification","setLoading","setUser","loadUser","authService","updatedUser","default","getProfile","apiError","warn","isAuthenticated","window","location","href","setDocuments","documentsArray","reduce","sum","file_size","uploadDate","uploaded_at","weekAgo","setDate","getDate","loadDocuments","documentService","getDocuments","created_at","addDocument","updateDocument","deleteDocument","documentId","removeDocument","setSearchQuery","query","setFilter","getFilteredDocuments","filtered","toLowerCase","includes","description","document_type","Provider","value","useApp","context","Error"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nconst initialState = {\n  theme: localStorage.getItem('theme') || 'light',\n  notifications: [],\n  loading: false,\n  user: (() => {\n    // Essayer de charger l'utilisateur depuis le localStorage au démarrage\n    try {\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error('Erreur lors du chargement de l\\'utilisateur depuis localStorage:', error);\n      return null;\n    }\n  })(),\n  documents: [],\n  searchQuery: '',\n  selectedFilter: 'all',\n  stats: {\n    totalDocuments: 0,\n    totalSize: 0,\n    recentUploads: 0\n  }\n};\n\n// Action types\nconst ActionTypes = {\n  SET_THEME: 'SET_THEME',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  SET_LOADING: 'SET_LOADING',\n  SET_USER: 'SET_USER',\n  SET_DOCUMENTS: 'SET_DOCUMENTS',\n  ADD_DOCUMENT: 'ADD_DOCUMENT',\n  UPDATE_DOCUMENT: 'UPDATE_DOCUMENT',\n  REMOVE_DOCUMENT: 'REMOVE_DOCUMENT',\n  SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\n  SET_FILTER: 'SET_FILTER',\n  UPDATE_STATS: 'UPDATE_STATS'\n};\n\n// Reducer\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_THEME:\n      localStorage.setItem('theme', action.payload);\n      document.documentElement.setAttribute('data-theme', action.payload);\n      return { ...state, theme: action.payload };\n\n    case ActionTypes.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, {\n          id: Date.now(),\n          ...action.payload\n        }]\n      };\n\n    case ActionTypes.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n\n    case ActionTypes.SET_LOADING:\n      return { ...state, loading: action.payload };\n\n    case ActionTypes.SET_USER:\n      return { ...state, user: action.payload };\n\n    case ActionTypes.SET_DOCUMENTS:\n      return { ...state, documents: Array.isArray(action.payload) ? action.payload : [] };\n\n    case ActionTypes.ADD_DOCUMENT:\n      return {\n        ...state,\n        documents: [action.payload, ...(Array.isArray(state.documents) ? state.documents : [])]\n      };\n\n    case ActionTypes.UPDATE_DOCUMENT:\n      return {\n        ...state,\n        documents: Array.isArray(state.documents)\n          ? state.documents.map(doc =>\n              doc.id === action.payload.id ? action.payload : doc\n            )\n          : []\n      };\n\n    case ActionTypes.REMOVE_DOCUMENT:\n      return {\n        ...state,\n        documents: Array.isArray(state.documents)\n          ? state.documents.filter(doc => doc.id !== action.payload)\n          : []\n      };\n\n    case ActionTypes.SET_SEARCH_QUERY:\n      return { ...state, searchQuery: action.payload };\n\n    case ActionTypes.SET_FILTER:\n      return { ...state, selectedFilter: action.payload };\n\n    case ActionTypes.UPDATE_STATS:\n      return { ...state, stats: { ...state.stats, ...action.payload } };\n\n    default:\n      return state;\n  }\n};\n\n// Context\nconst AppContext = createContext();\n\n// Provider component\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Initialize theme on mount\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', state.theme);\n  }, []);\n\n  // Auto-remove notifications after 5 seconds\n  useEffect(() => {\n    state.notifications.forEach(notification => {\n      if (notification.autoRemove !== false) {\n        setTimeout(() => {\n          dispatch({ type: ActionTypes.REMOVE_NOTIFICATION, payload: notification.id });\n        }, 5000);\n      }\n    });\n  }, [state.notifications]);\n\n  // Actions\n  const actions = {\n    toggleTheme: () => {\n      const newTheme = state.theme === 'light' ? 'dark' : 'light';\n      dispatch({ type: ActionTypes.SET_THEME, payload: newTheme });\n    },\n\n    showNotification: (type, message, title = '') => {\n      dispatch({\n        type: ActionTypes.ADD_NOTIFICATION,\n        payload: { type, message, title }\n      });\n    },\n\n    removeNotification: (id) => {\n      dispatch({ type: ActionTypes.REMOVE_NOTIFICATION, payload: id });\n    },\n\n    setLoading: (loading) => {\n      dispatch({ type: ActionTypes.SET_LOADING, payload: loading });\n    },\n\n    setUser: (user) => {\n      dispatch({ type: ActionTypes.SET_USER, payload: user });\n    },\n\n    // Charger l'utilisateur depuis le localStorage ou l'API\n    loadUser: async () => {\n      try {\n        // D'abord, essayer de charger depuis le localStorage\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const user = JSON.parse(storedUser);\n          dispatch({ type: ActionTypes.SET_USER, payload: user });\n\n          // Ensuite, essayer de récupérer les données à jour depuis l'API\n          try {\n            const authService = await import('../services/authService');\n            const updatedUser = await authService.default.getProfile();\n            dispatch({ type: ActionTypes.SET_USER, payload: updatedUser });\n          } catch (apiError) {\n            // Si l'API échoue, on garde les données du localStorage\n            console.warn('Impossible de récupérer le profil depuis l\\'API:', apiError);\n          }\n        } else {\n          // Si pas de données dans localStorage, essayer l'API\n          const authService = await import('../services/authService');\n          const user = await authService.default.getProfile();\n          dispatch({ type: ActionTypes.SET_USER, payload: user });\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement de l\\'utilisateur:', error);\n        // Si tout échoue et qu'on est censé être connecté, rediriger vers login\n        const authService = await import('../services/authService');\n        if (!authService.default.isAuthenticated()) {\n          window.location.href = '/login';\n        }\n      }\n    },\n\n    setDocuments: (documents) => {\n      const documentsArray = Array.isArray(documents) ? documents : [];\n      dispatch({ type: ActionTypes.SET_DOCUMENTS, payload: documentsArray });\n\n      // Update stats\n      const totalSize = documentsArray.reduce((sum, doc) => sum + (doc.file_size || 0), 0);\n      const recentUploads = documentsArray.filter(doc => {\n        const uploadDate = new Date(doc.uploaded_at);\n        const weekAgo = new Date();\n        weekAgo.setDate(weekAgo.getDate() - 7);\n        return uploadDate > weekAgo;\n      }).length;\n\n      dispatch({\n        type: ActionTypes.UPDATE_STATS,\n        payload: {\n          totalDocuments: documentsArray.length,\n          totalSize,\n          recentUploads\n        }\n      });\n    },\n\n    // Charger les documents depuis l'API\n    loadDocuments: async () => {\n      try {\n        const documentService = await import('../services/documentService');\n        const documents = await documentService.default.getDocuments();\n        dispatch({ type: ActionTypes.SET_DOCUMENTS, payload: documents });\n\n        // Update stats\n        const totalSize = documents.reduce((sum, doc) => sum + (doc.file_size || 0), 0);\n        const recentUploads = documents.filter(doc => {\n          const uploadDate = new Date(doc.uploaded_at || doc.created_at);\n          const weekAgo = new Date();\n          weekAgo.setDate(weekAgo.getDate() - 7);\n          return uploadDate > weekAgo;\n        }).length;\n\n        dispatch({\n          type: ActionTypes.UPDATE_STATS,\n          payload: {\n            totalDocuments: documents.length,\n            totalSize,\n            recentUploads\n          }\n        });\n      } catch (error) {\n        console.error('Erreur lors du chargement des documents:', error);\n        actions.showNotification('error', 'Erreur lors du chargement des documents');\n      }\n    },\n\n    addDocument: (document) => {\n      dispatch({ type: ActionTypes.ADD_DOCUMENT, payload: document });\n      actions.showNotification('success', 'Document ajouté avec succès', 'Succès');\n    },\n\n    // Mettre à jour un document\n    updateDocument: (document) => {\n      dispatch({ type: ActionTypes.UPDATE_DOCUMENT, payload: document });\n      actions.showNotification('success', 'Document modifié avec succès', 'Succès');\n    },\n\n    // Supprimer un document\n    deleteDocument: async (documentId) => {\n      try {\n        const documentService = await import('../services/documentService');\n        await documentService.default.deleteDocument(documentId);\n        dispatch({ type: ActionTypes.REMOVE_DOCUMENT, payload: documentId });\n        actions.showNotification('success', 'Document supprimé avec succès');\n      } catch (error) {\n        console.error('Erreur lors de la suppression:', error);\n        actions.showNotification('error', 'Erreur lors de la suppression du document');\n        throw error;\n      }\n    },\n\n    removeDocument: (id) => {\n      dispatch({ type: ActionTypes.REMOVE_DOCUMENT, payload: id });\n      actions.showNotification('success', 'Document supprimé avec succès', 'Succès');\n    },\n\n    setSearchQuery: (query) => {\n      dispatch({ type: ActionTypes.SET_SEARCH_QUERY, payload: query });\n    },\n\n    setFilter: (filter) => {\n      dispatch({ type: ActionTypes.SET_FILTER, payload: filter });\n    },\n\n    // Filtered documents based on search and filter\n    getFilteredDocuments: () => {\n      // S'assurer que documents est un tableau\n      let filtered = Array.isArray(state.documents) ? state.documents : [];\n\n      // Apply search filter\n      if (state.searchQuery) {\n        const query = state.searchQuery.toLowerCase();\n        filtered = filtered.filter(doc =>\n          doc.title.toLowerCase().includes(query) ||\n          doc.description.toLowerCase().includes(query)\n        );\n      }\n\n      // Apply type filter\n      if (state.selectedFilter !== 'all') {\n        filtered = filtered.filter(doc => doc.document_type === state.selectedFilter);\n      }\n\n      return filtered;\n    }\n  };\n\n  return (\n    <AppContext.Provider value={{ state, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom hook to use the context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}