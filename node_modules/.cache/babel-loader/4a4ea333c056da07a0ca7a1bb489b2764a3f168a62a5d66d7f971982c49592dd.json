{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import adminService from'../services/adminService';import AdminNavbar from'../components/AdminNavbar';import AdminStats from'../components/AdminStats';import UsersTable from'../components/UsersTable';import UserFormModal from'../components/UserFormModal';import ConfirmModal from'../components/ConfirmModal';import{useApp}from'../contexts/AppContext';import'../styles/AdminPanel.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminPanel=()=>{const navigate=useNavigate();const location=useLocation();const{actions,state}=useApp();const currentUser=state.user;// États\nconst[users,setUsers]=useState([]);const[stats,setStats]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState('');// États des modals\nconst[showUserModal,setShowUserModal]=useState(false);const[showConfirmModal,setShowConfirmModal]=useState(false);const[editingUser,setEditingUser]=useState(null);const[actionUser,setActionUser]=useState(null);const[actionType,setActionType]=useState('');// États des filtres\nconst[filters,setFilters]=useState({search:'',role:'',status:''});const[refreshTrigger,setRefreshTrigger]=useState(0);// Vérifier les droits admin au chargement\nuseEffect(()=>{const checkAdminAccess=async()=>{const isAdmin=await adminService.checkAdminStatus();if(!isAdmin){actions.showNotification('error','Accès refusé. Droits administrateur requis.');navigate('/dashboard');return;}loadData();};checkAdminAccess();},[navigate,refreshTrigger,actions]);// Afficher les notifications après redirection\nuseEffect(()=>{const storedNotification=sessionStorage.getItem('adminNotification');if(storedNotification){try{const{message,type}=JSON.parse(storedNotification);setTimeout(()=>{actions.showNotification(type,message);},500);// Délai pour que la page soit complètement chargée\n// Supprimer la notification du sessionStorage\nsessionStorage.removeItem('adminNotification');}catch(error){console.error('Erreur lors de la lecture de la notification:',error);}}},[location.search,actions]);// Se déclenche quand l'URL change\nconst loadData=async()=>{setLoading(true);setError('');try{console.log('AdminPanel: Début du chargement des données');// Charger les utilisateurs\nconsole.log('AdminPanel: Chargement des utilisateurs...');const usersResult=await adminService.getUsers(filters);console.log('AdminPanel: Résultat utilisateurs:',usersResult);if(usersResult.success){const userData=usersResult.data.results||usersResult.data||[];console.log('AdminPanel: Données utilisateurs:',userData);setUsers(Array.isArray(userData)?userData:[]);}else{console.error('AdminPanel: Erreur utilisateurs:',usersResult.error);setError(usersResult.error);return;// Arrêter ici si erreur utilisateurs\n}// Charger les statistiques\nconsole.log('AdminPanel: Chargement des statistiques...');const statsResult=await adminService.getAdminStats();console.log('AdminPanel: Résultat statistiques:',statsResult);if(statsResult.success){setStats(statsResult.data);}else{console.warn('AdminPanel: Erreur statistiques (non bloquante):',statsResult.error);// Ne pas bloquer pour les stats, utiliser des valeurs par défaut\nsetStats({total_users:0,admin_users:0,normal_users:0,active_users:0,inactive_users:0,total_documents:0,recent_users:0,recent_documents:0});}}catch(err){console.error('AdminPanel: Erreur générale:',err);setError('Erreur lors du chargement des données: '+err.message);}finally{setLoading(false);}};// Gestionnaires d'événements\nconst handleCreateUser=()=>{setEditingUser(null);setShowUserModal(true);};const handleEditUser=user=>{setEditingUser(user);setShowUserModal(true);};const handleDeleteUser=user=>{setActionUser(user);setActionType('delete');setShowConfirmModal(true);};const handleToggleAdmin=user=>{setActionUser(user);setActionType('toggleAdmin');setShowConfirmModal(true);};const handleToggleActive=user=>{setActionUser(user);setActionType('toggleActive');setShowConfirmModal(true);};const handleUserSubmit=async userData=>{try{console.log('AdminPanel: Action utilisateur -',editingUser?'Modification':'Création');let result;const actionType=editingUser?'Modification':'Création';if(editingUser){result=await adminService.updateUser(editingUser.id,userData);}else{result=await adminService.createUser(userData);}if(result.success){setShowUserModal(false);// Redirection vers la même page pour rafraîchissement complet\nconsole.log('AdminPanel: Redirection pour rafraîchissement complet après',actionType);redirectToSamePage(`✅ ${actionType} réussie - Page actualisée automatiquement`);}else{actions.showNotification('error',result.error);}}catch(error){console.error('AdminPanel: Erreur:',error);actions.showNotification('error','Erreur lors de l\\'opération');}};const handleConfirmAction=async()=>{if(!actionUser)return;try{console.log('AdminPanel: Action -',actionType,'pour',actionUser.email);let result;let actionName='';switch(actionType){case'delete':result=await adminService.deleteUser(actionUser.id);actionName='Suppression';break;case'toggleAdmin':result=await adminService.toggleUserAdmin(actionUser.id);actionName=actionUser.is_staff?'Rétrogradation':'Promotion';break;case'toggleActive':result=await adminService.toggleUserActive(actionUser.id);actionName=actionUser.is_active?'Désactivation':'Activation';break;default:return;}if(result.success){setShowConfirmModal(false);setActionUser(null);setActionType('');// Redirection vers la même page pour rafraîchissement complet\nconsole.log('AdminPanel: Redirection pour rafraîchissement complet après',actionName);redirectToSamePage(`✅ ${actionName} réussie - Page actualisée automatiquement`);}else{actions.showNotification('error',result.error);}}catch(error){console.error('AdminPanel: Erreur lors de l\\'action:',error);actions.showNotification('error','Erreur lors de l\\'opération');}finally{setShowConfirmModal(false);setActionUser(null);setActionType('');}};const handleFiltersChange=newFilters=>{setFilters(newFilters);setRefreshTrigger(prev=>prev+1);};// Fonction pour rediriger vers la même page (rafraîchissement complet)\nconst redirectToSamePage=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';console.log('AdminPanel: Redirection vers la même page pour rafraîchissement complet');// Stocker le message dans sessionStorage pour l'afficher après redirection\nsessionStorage.setItem('adminNotification',JSON.stringify({message,type}));// Rediriger vers la même page avec un paramètre pour forcer le rechargement\nconst currentPath=location.pathname;const timestamp=Date.now();navigate(`${currentPath}?refresh=${timestamp}`,{replace:true});};const getConfirmMessage=()=>{if(!actionUser)return'';switch(actionType){case'delete':return`Êtes-vous sûr de vouloir supprimer l'utilisateur \"${actionUser.email}\" ? Cette action est irréversible.`;case'toggleAdmin':return actionUser.is_staff?`Êtes-vous sûr de vouloir rétrograder \"${actionUser.email}\" en utilisateur normal ?`:`Êtes-vous sûr de vouloir promouvoir \"${actionUser.email}\" en administrateur ?`;case'toggleActive':return actionUser.is_active?`Êtes-vous sûr de vouloir désactiver l'utilisateur \"${actionUser.email}\" ?`:`Êtes-vous sûr de vouloir activer l'utilisateur \"${actionUser.email}\" ?`;default:return'';}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 d-flex align-items-center justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Chargement...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-3\",children:\"Chargement du panneau d'administration...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 d-flex align-items-center justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-triangle me-2\"}),error]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:()=>setRefreshTrigger(prev=>prev+1),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-redo me-2\"}),\"R\\xE9essayer\"]})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-container admin-fade-in\",children:[/*#__PURE__*/_jsx(AdminNavbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"admin-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"admin-title mb-0\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-users-cog me-3\"}),\"Panneau d'Administration\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"admin-subtitle mb-0\",children:\"Gestion des utilisateurs et du syst\\xE8me\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"modern-admin-btn\",onClick:handleCreateUser,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-plus me-2\"}),\"Nouvel Utilisateur\"]})]})})})}),/*#__PURE__*/_jsx(AdminStats,{stats:stats}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"admin-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"admin-card-body\",children:/*#__PURE__*/_jsx(UsersTable,{users:users,currentUser:currentUser,filters:filters,onFiltersChange:handleFiltersChange,onEditUser:handleEditUser,onDeleteUser:handleDeleteUser,onToggleAdmin:handleToggleAdmin,onToggleActive:handleToggleActive})})})})})]}),/*#__PURE__*/_jsx(UserFormModal,{show:showUserModal,user:editingUser,onHide:()=>setShowUserModal(false),onSubmit:handleUserSubmit}),/*#__PURE__*/_jsx(ConfirmModal,{show:showConfirmModal,title:\"Confirmation\",message:getConfirmMessage(),onConfirm:handleConfirmAction,onCancel:()=>setShowConfirmModal(false),confirmButtonClass:actionType==='delete'?'btn-danger':'btn-primary'})]});};export default AdminPanel;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","adminService","AdminNavbar","AdminStats","UsersTable","UserFormModal","ConfirmModal","useApp","jsx","_jsx","jsxs","_jsxs","AdminPanel","navigate","location","actions","state","currentUser","user","users","setUsers","stats","setStats","loading","setLoading","error","setError","showUserModal","setShowUserModal","showConfirmModal","setShowConfirmModal","editingUser","setEditingUser","actionUser","setActionUser","actionType","setActionType","filters","setFilters","search","role","status","refreshTrigger","setRefreshTrigger","checkAdminAccess","isAdmin","checkAdminStatus","showNotification","loadData","storedNotification","sessionStorage","getItem","message","type","JSON","parse","setTimeout","removeItem","console","log","usersResult","getUsers","success","userData","data","results","Array","isArray","statsResult","getAdminStats","warn","total_users","admin_users","normal_users","active_users","inactive_users","total_documents","recent_users","recent_documents","err","handleCreateUser","handleEditUser","handleDeleteUser","handleToggleAdmin","handleToggleActive","handleUserSubmit","result","updateUser","id","createUser","redirectToSamePage","handleConfirmAction","email","actionName","deleteUser","toggleUserAdmin","is_staff","toggleUserActive","is_active","handleFiltersChange","newFilters","prev","arguments","length","undefined","setItem","stringify","currentPath","pathname","timestamp","Date","now","replace","getConfirmMessage","className","children","onClick","onFiltersChange","onEditUser","onDeleteUser","onToggleAdmin","onToggleActive","show","onHide","onSubmit","title","onConfirm","onCancel","confirmButtonClass"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport adminService from '../services/adminService';\nimport AdminNavbar from '../components/AdminNavbar';\nimport AdminStats from '../components/AdminStats';\nimport UsersTable from '../components/UsersTable';\nimport UserFormModal from '../components/UserFormModal';\nimport ConfirmModal from '../components/ConfirmModal';\nimport { useApp } from '../contexts/AppContext';\nimport '../styles/AdminPanel.css';\n\nconst AdminPanel = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { actions, state } = useApp();\n  const currentUser = state.user;\n  \n  // États\n  const [users, setUsers] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  // États des modals\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [actionUser, setActionUser] = useState(null);\n  const [actionType, setActionType] = useState('');\n  \n  // États des filtres\n  const [filters, setFilters] = useState({\n    search: '',\n    role: '',\n    status: ''\n  });\n  \n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  // Vérifier les droits admin au chargement\n  useEffect(() => {\n    const checkAdminAccess = async () => {\n      const isAdmin = await adminService.checkAdminStatus();\n      if (!isAdmin) {\n        actions.showNotification('error', 'Accès refusé. Droits administrateur requis.');\n        navigate('/dashboard');\n        return;\n      }\n      loadData();\n    };\n\n    checkAdminAccess();\n  }, [navigate, refreshTrigger, actions]);\n\n  // Afficher les notifications après redirection\n  useEffect(() => {\n    const storedNotification = sessionStorage.getItem('adminNotification');\n    if (storedNotification) {\n      try {\n        const { message, type } = JSON.parse(storedNotification);\n        setTimeout(() => {\n          actions.showNotification(type, message);\n        }, 500); // Délai pour que la page soit complètement chargée\n\n        // Supprimer la notification du sessionStorage\n        sessionStorage.removeItem('adminNotification');\n      } catch (error) {\n        console.error('Erreur lors de la lecture de la notification:', error);\n      }\n    }\n  }, [location.search, actions]); // Se déclenche quand l'URL change\n\n  const loadData = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      console.log('AdminPanel: Début du chargement des données');\n\n      // Charger les utilisateurs\n      console.log('AdminPanel: Chargement des utilisateurs...');\n      const usersResult = await adminService.getUsers(filters);\n      console.log('AdminPanel: Résultat utilisateurs:', usersResult);\n\n      if (usersResult.success) {\n        const userData = usersResult.data.results || usersResult.data || [];\n        console.log('AdminPanel: Données utilisateurs:', userData);\n        setUsers(Array.isArray(userData) ? userData : []);\n      } else {\n        console.error('AdminPanel: Erreur utilisateurs:', usersResult.error);\n        setError(usersResult.error);\n        return; // Arrêter ici si erreur utilisateurs\n      }\n\n      // Charger les statistiques\n      console.log('AdminPanel: Chargement des statistiques...');\n      const statsResult = await adminService.getAdminStats();\n      console.log('AdminPanel: Résultat statistiques:', statsResult);\n\n      if (statsResult.success) {\n        setStats(statsResult.data);\n      } else {\n        console.warn('AdminPanel: Erreur statistiques (non bloquante):', statsResult.error);\n        // Ne pas bloquer pour les stats, utiliser des valeurs par défaut\n        setStats({\n          total_users: 0,\n          admin_users: 0,\n          normal_users: 0,\n          active_users: 0,\n          inactive_users: 0,\n          total_documents: 0,\n          recent_users: 0,\n          recent_documents: 0\n        });\n      }\n    } catch (err) {\n      console.error('AdminPanel: Erreur générale:', err);\n      setError('Erreur lors du chargement des données: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Gestionnaires d'événements\n  const handleCreateUser = () => {\n    setEditingUser(null);\n    setShowUserModal(true);\n  };\n\n  const handleEditUser = (user) => {\n    setEditingUser(user);\n    setShowUserModal(true);\n  };\n\n  const handleDeleteUser = (user) => {\n    setActionUser(user);\n    setActionType('delete');\n    setShowConfirmModal(true);\n  };\n\n  const handleToggleAdmin = (user) => {\n    setActionUser(user);\n    setActionType('toggleAdmin');\n    setShowConfirmModal(true);\n  };\n\n  const handleToggleActive = (user) => {\n    setActionUser(user);\n    setActionType('toggleActive');\n    setShowConfirmModal(true);\n  };\n\n  const handleUserSubmit = async (userData) => {\n    try {\n      console.log('AdminPanel: Action utilisateur -', editingUser ? 'Modification' : 'Création');\n\n      let result;\n      const actionType = editingUser ? 'Modification' : 'Création';\n\n      if (editingUser) {\n        result = await adminService.updateUser(editingUser.id, userData);\n      } else {\n        result = await adminService.createUser(userData);\n      }\n\n      if (result.success) {\n        setShowUserModal(false);\n\n        // Redirection vers la même page pour rafraîchissement complet\n        console.log('AdminPanel: Redirection pour rafraîchissement complet après', actionType);\n        redirectToSamePage(`✅ ${actionType} réussie - Page actualisée automatiquement`);\n\n      } else {\n        actions.showNotification('error', result.error);\n      }\n    } catch (error) {\n      console.error('AdminPanel: Erreur:', error);\n      actions.showNotification('error', 'Erreur lors de l\\'opération');\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!actionUser) return;\n\n    try {\n      console.log('AdminPanel: Action -', actionType, 'pour', actionUser.email);\n\n      let result;\n      let actionName = '';\n\n      switch (actionType) {\n        case 'delete':\n          result = await adminService.deleteUser(actionUser.id);\n          actionName = 'Suppression';\n          break;\n        case 'toggleAdmin':\n          result = await adminService.toggleUserAdmin(actionUser.id);\n          actionName = actionUser.is_staff ? 'Rétrogradation' : 'Promotion';\n          break;\n        case 'toggleActive':\n          result = await adminService.toggleUserActive(actionUser.id);\n          actionName = actionUser.is_active ? 'Désactivation' : 'Activation';\n          break;\n        default:\n          return;\n      }\n\n      if (result.success) {\n        setShowConfirmModal(false);\n        setActionUser(null);\n        setActionType('');\n\n        // Redirection vers la même page pour rafraîchissement complet\n        console.log('AdminPanel: Redirection pour rafraîchissement complet après', actionName);\n        redirectToSamePage(`✅ ${actionName} réussie - Page actualisée automatiquement`);\n\n      } else {\n        actions.showNotification('error', result.error);\n      }\n    } catch (error) {\n      console.error('AdminPanel: Erreur lors de l\\'action:', error);\n      actions.showNotification('error', 'Erreur lors de l\\'opération');\n    } finally {\n      setShowConfirmModal(false);\n      setActionUser(null);\n      setActionType('');\n    }\n  };\n\n  const handleFiltersChange = (newFilters) => {\n    setFilters(newFilters);\n    setRefreshTrigger(prev => prev + 1);\n  };\n\n  // Fonction pour rediriger vers la même page (rafraîchissement complet)\n  const redirectToSamePage = (message, type = 'success') => {\n    console.log('AdminPanel: Redirection vers la même page pour rafraîchissement complet');\n\n    // Stocker le message dans sessionStorage pour l'afficher après redirection\n    sessionStorage.setItem('adminNotification', JSON.stringify({ message, type }));\n\n    // Rediriger vers la même page avec un paramètre pour forcer le rechargement\n    const currentPath = location.pathname;\n    const timestamp = Date.now();\n    navigate(`${currentPath}?refresh=${timestamp}`, { replace: true });\n  };\n\n  const getConfirmMessage = () => {\n    if (!actionUser) return '';\n    \n    switch (actionType) {\n      case 'delete':\n        return `Êtes-vous sûr de vouloir supprimer l'utilisateur \"${actionUser.email}\" ? Cette action est irréversible.`;\n      case 'toggleAdmin':\n        return actionUser.is_staff \n          ? `Êtes-vous sûr de vouloir rétrograder \"${actionUser.email}\" en utilisateur normal ?`\n          : `Êtes-vous sûr de vouloir promouvoir \"${actionUser.email}\" en administrateur ?`;\n      case 'toggleActive':\n        return actionUser.is_active\n          ? `Êtes-vous sûr de vouloir désactiver l'utilisateur \"${actionUser.email}\" ?`\n          : `Êtes-vous sûr de vouloir activer l'utilisateur \"${actionUser.email}\" ?`;\n      default:\n        return '';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-vh-100 d-flex align-items-center justify-content-center\">\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Chargement...</span>\n          </div>\n          <p className=\"mt-3\">Chargement du panneau d'administration...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-vh-100 d-flex align-items-center justify-content-center\">\n        <div className=\"text-center\">\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <i className=\"fas fa-exclamation-triangle me-2\"></i>\n            {error}\n          </div>\n          <button \n            className=\"btn btn-primary\" \n            onClick={() => setRefreshTrigger(prev => prev + 1)}\n          >\n            <i className=\"fas fa-redo me-2\"></i>\n            Réessayer\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-container admin-fade-in\">\n      <AdminNavbar />\n      <div className=\"container-fluid py-4\">\n        {/* En-tête moderne */}\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <div className=\"admin-header\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <h1 className=\"admin-title mb-0\">\n                    <i className=\"fas fa-users-cog me-3\"></i>\n                    Panneau d'Administration\n                  </h1>\n                  <p className=\"admin-subtitle mb-0\">Gestion des utilisateurs et du système</p>\n                </div>\n                <button\n                  className=\"modern-admin-btn\"\n                  onClick={handleCreateUser}\n                >\n                  <i className=\"fas fa-user-plus me-2\"></i>\n                  Nouvel Utilisateur\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Statistiques */}\n        <AdminStats stats={stats} />\n        {/* Table des utilisateurs */}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"admin-card\">\n              <div className=\"admin-card-body\">\n                <UsersTable\n                  users={users}\n                  currentUser={currentUser}\n                  filters={filters}\n                  onFiltersChange={handleFiltersChange}\n                  onEditUser={handleEditUser}\n                  onDeleteUser={handleDeleteUser}\n                  onToggleAdmin={handleToggleAdmin}\n                  onToggleActive={handleToggleActive}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Modals */}\n      <UserFormModal\n        show={showUserModal}\n        user={editingUser}\n        onHide={() => setShowUserModal(false)}\n        onSubmit={handleUserSubmit}\n      />\n      <ConfirmModal\n        show={showConfirmModal}\n        title=\"Confirmation\"\n        message={getConfirmMessage()}\n        onConfirm={handleConfirmAction}\n        onCancel={() => setShowConfirmModal(false)}\n        confirmButtonClass={actionType === 'delete' ? 'btn-danger' : 'btn-primary'}\n      />\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}