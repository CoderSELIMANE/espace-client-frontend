{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://127.0.0.1:8000/api';// Configuration d'axios\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Intercepteur pour ajouter le token JWT aux requêtes\napi.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Intercepteur pour gérer les erreurs de réponse\napi.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refresh_token');if(refreshToken){const response=await axios.post(`${API_BASE_URL}/token/refresh/`,{refresh:refreshToken});const{access}=response.data;localStorage.setItem('access_token',access);// Retry the original request with new token\noriginalRequest.headers.Authorization=`Bearer ${access}`;return api(originalRequest);}}catch(refreshError){// Refresh failed, redirect to login\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');window.location.href='/login';}}return Promise.reject(error);});class AuthService{// Inscription\nasync register(userData){try{const response=await api.post('/register/',userData);if(response.data.tokens){this.setTokens(response.data.tokens);this.setUser(response.data.user);}return response.data;}catch(error){var _error$response2;throw((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message;}}// Connexion\nasync login(email,password){try{const response=await api.post('/login/',{email,password});if(response.data.tokens){this.setTokens(response.data.tokens);this.setUser(response.data.user);return{success:true,user:response.data.user};}return{success:false,message:'Erreur de connexion'};}catch(error){var _error$response3,_error$response3$data,_error$response4,_error$response4$data;console.error('Erreur de connexion:',error);return{success:false,message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.detail)||'Erreur de connexion'};}}// Déconnexion\nlogout(){localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');window.location.href='/login';}// Vérifier si l'utilisateur est connecté\nisAuthenticated(){const token=localStorage.getItem('access_token');const user=localStorage.getItem('user');return!!(token&&user);}// Obtenir l'utilisateur actuel\ngetCurrentUser(){const user=localStorage.getItem('user');return user?JSON.parse(user):null;}// Obtenir le token d'accès\ngetAccessToken(){return localStorage.getItem('access_token');}// Obtenir le token de rafraîchissement\ngetRefreshToken(){return localStorage.getItem('refresh_token');}// Vérifier si l'utilisateur est admin\nisAdmin(){const user=this.getCurrentUser();return user&&(user.is_staff||user.is_superuser);}// Obtenir le profil utilisateur\nasync getProfile(){try{const response=await api.get('/profile/');this.setUser(response.data);return response.data;}catch(error){var _error$response5;throw((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data)||error.message;}}// Mettre à jour le profil utilisateur\nasync updateProfile(profileData){try{console.log('AuthService: Envoi des données de profil:',profileData);const response=await api.put('/profile/',profileData);console.log('AuthService: Réponse reçue:',response.data);this.setUser(response.data);return response.data;}catch(error){var _error$response6,_error$response7;console.error('AuthService: Erreur lors de la mise à jour du profil:',error);console.error('AuthService: Statut de la réponse:',(_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status);console.error('AuthService: Données de la réponse:',(_error$response7=error.response)===null||_error$response7===void 0?void 0:_error$response7.data);// Améliorer la gestion d'erreurs\nif(error.response){// Erreur de réponse HTTP\nconst errorData=error.response.data;if(typeof errorData==='object'){// Si c'est un objet d'erreurs de validation\nconst firstError=Object.values(errorData)[0];if(Array.isArray(firstError)){throw new Error(firstError[0]);}else if(typeof firstError==='string'){throw new Error(firstError);}else if(errorData.detail){throw new Error(errorData.detail);}else if(errorData.message){throw new Error(errorData.message);}}else if(typeof errorData==='string'){throw new Error(errorData);}throw new Error(`Erreur HTTP ${error.response.status}`);}else if(error.request){// Erreur de réseau\nthrow new Error('Erreur de connexion au serveur');}else{// Autre erreur\nthrow new Error(error.message||'Erreur inconnue');}}}// Méthodes utilitaires privées\nsetTokens(tokens){localStorage.setItem('access_token',tokens.access);localStorage.setItem('refresh_token',tokens.refresh);}setUser(user){localStorage.setItem('user',JSON.stringify(user));}}export default new AuthService();export{api};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","window","location","href","AuthService","register","userData","tokens","setTokens","setUser","user","_error$response2","message","login","email","password","success","_error$response3","_error$response3$data","_error$response4","_error$response4$data","console","detail","logout","isAuthenticated","getCurrentUser","JSON","parse","getAccessToken","getRefreshToken","isAdmin","is_staff","is_superuser","getProfile","get","_error$response5","updateProfile","profileData","log","put","_error$response6","_error$response7","errorData","firstError","Object","values","Array","isArray","Error","stringify"],"sources":["C:/Users/PC/Desktop/modifier/Gestion_bibliotheque/espace_client_app/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://127.0.0.1:8000/api';\n\n// Configuration d'axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Intercepteur pour ajouter le token JWT aux requêtes\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Intercepteur pour gérer les erreurs de réponse\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n          const response = await axios.post(`${API_BASE_URL}/token/refresh/`, {\n            refresh: refreshToken,\n          });\n\n          const { access } = response.data;\n          localStorage.setItem('access_token', access);\n\n          // Retry the original request with new token\n          originalRequest.headers.Authorization = `Bearer ${access}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nclass AuthService {\n  // Inscription\n  async register(userData) {\n    try {\n      const response = await api.post('/register/', userData);\n      if (response.data.tokens) {\n        this.setTokens(response.data.tokens);\n        this.setUser(response.data.user);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Connexion\n  async login(email, password) {\n    try {\n      const response = await api.post('/login/', { email, password });\n      if (response.data.tokens) {\n        this.setTokens(response.data.tokens);\n        this.setUser(response.data.user);\n        return { success: true, user: response.data.user };\n      }\n      return { success: false, message: 'Erreur de connexion' };\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || error.response?.data?.detail || 'Erreur de connexion'\n      };\n    }\n  }\n\n  // Déconnexion\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Vérifier si l'utilisateur est connecté\n  isAuthenticated() {\n    const token = localStorage.getItem('access_token');\n    const user = localStorage.getItem('user');\n    return !!(token && user);\n  }\n\n  // Obtenir l'utilisateur actuel\n  getCurrentUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n\n  // Obtenir le token d'accès\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  // Obtenir le token de rafraîchissement\n  getRefreshToken() {\n    return localStorage.getItem('refresh_token');\n  }\n\n  // Vérifier si l'utilisateur est admin\n  isAdmin() {\n    const user = this.getCurrentUser();\n    return user && (user.is_staff || user.is_superuser);\n  }\n\n  // Obtenir le profil utilisateur\n  async getProfile() {\n    try {\n      const response = await api.get('/profile/');\n      this.setUser(response.data);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n\n  // Mettre à jour le profil utilisateur\n  async updateProfile(profileData) {\n    try {\n      console.log('AuthService: Envoi des données de profil:', profileData);\n      const response = await api.put('/profile/', profileData);\n      console.log('AuthService: Réponse reçue:', response.data);\n\n      this.setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('AuthService: Erreur lors de la mise à jour du profil:', error);\n      console.error('AuthService: Statut de la réponse:', error.response?.status);\n      console.error('AuthService: Données de la réponse:', error.response?.data);\n\n      // Améliorer la gestion d'erreurs\n      if (error.response) {\n        // Erreur de réponse HTTP\n        const errorData = error.response.data;\n        if (typeof errorData === 'object') {\n          // Si c'est un objet d'erreurs de validation\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            throw new Error(firstError[0]);\n          } else if (typeof firstError === 'string') {\n            throw new Error(firstError);\n          } else if (errorData.detail) {\n            throw new Error(errorData.detail);\n          } else if (errorData.message) {\n            throw new Error(errorData.message);\n          }\n        } else if (typeof errorData === 'string') {\n          throw new Error(errorData);\n        }\n        throw new Error(`Erreur HTTP ${error.response.status}`);\n      } else if (error.request) {\n        // Erreur de réseau\n        throw new Error('Erreur de connexion au serveur');\n      } else {\n        // Autre erreur\n        throw new Error(error.message || 'Erreur inconnue');\n      }\n    }\n  }\n\n  // Méthodes utilitaires privées\n  setTokens(tokens) {\n    localStorage.setItem('access_token', tokens.access);\n    localStorage.setItem('refresh_token', tokens.refresh);\n  }\n\n  setUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n}\n\nexport default new AuthService();\nexport { api };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}